# code: language=ansible
---
- name: Install dependencies
  become: "{{ ansible_facts.distribution != 'MacOSX' }}"
  ansible.builtin.package:
    name: '{{ oh_my_zsh_dependencies }}'
    state: present

- name: Git clone oh-my-zsh for users
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.git:
    repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
    dest: '~{{ user.username }}/.oh-my-zsh'
    depth: 1
  with_items: "{{ users }}"
  when: "((user.oh_my_zsh | default({})).install | default(oh_my_zsh_install)) | bool"
  loop_control:
    loop_var: user
    label: '{{ user.username }}'

- name: Git clone zsh-syntax-highlighting
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
    dest: '~{{ user.username }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting'
    depth: 1
  with_items: "{{ users }}"
  when: "((user.oh_my_zsh | default({})).install | default(oh_my_zsh_install)) | bool"
  loop_control:
    loop_var: user
    label: '{{ user.username }}'

- name: Git clone zsh-autosuggestions
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.git:
    repo: 'https://github.com/zsh-users/zsh-autosuggestions'
    dest: '~{{ user.username }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions'
    depth: 1
  with_items: "{{ users }}"
  when: "((user.oh_my_zsh | default({})).install | default(oh_my_zsh_install)) | bool"
  loop_control:
    loop_var: user
    label: '{{ user.username }}'

- name: Set default shell for users
  become: true
  ansible.builtin.user:
    name: '{{ user.username }}'
    shell: '{{ oh_my_zsh_zsh_path }}'
  with_items: "{{ users }}"
  when: "((user.oh_my_zsh | default({})).install | default(oh_my_zsh_install)) | bool"
  loop_control:
    loop_var: user
    label: '{{ user.username }}'



- name: Write .zshrc for users
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.template:
    src: zshrc.j2
    dest: '~{{ user.username }}/.zshrc'
    backup: true
    mode: 'u=rw,go=r'
  with_items: '{{ users }}'
  vars:
    user_oh_my_zsh: '{{ user.oh_my_zsh | default({}) }}'
  when: >-
    ((user_oh_my_zsh.install | default(oh_my_zsh_install)) | bool)
    and ((user_oh_my_zsh.write_zshrc | default(oh_my_zsh_write_zshrc)) | bool)
  loop_control:
    loop_var: user
    label: '{{ user.username }}'
